//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "question_user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user_id: i32,
    pub question_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::question_table::Entity",
        from = "Column::QuestionId",
        to = "super::question_table::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    QuestionTable,
    #[sea_orm(
        belongs_to = "super::user_table::Entity",
        from = "Column::UserId",
        to = "super::user_table::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    UserTable,
}

impl Related<super::question_table::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::QuestionTable.def()
    }
}

impl Related<super::user_table::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserTable.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
